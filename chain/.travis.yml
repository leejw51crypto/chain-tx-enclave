rust: &rust
  language: rust
  sudo: required
  dist: trusty
  addons:
      apt:
          packages:
              - libssl-dev
              - libcurl4-openssl-dev
              - libelf-dev
              - libdw-dev
              - cmake
              - gcc
              - binutils-dev
              - libc6-dev
  cache: cargo
  env:
    - RUSTFLAGS=-Ctarget-feature=+aes,+ssse3
    - PATH=$HOME/.local/bin:$PATH
    - LD_LIBRARY_PATH=$HOME/lib
    - PKG_CONFIG_PATH=$HOME/lib/pkgconfig
  before_install: # versions from https://github.com/erickt/rust-zmq/blob/master/.travis.yml
    - wget https://github.com/jedisct1/libsodium/releases/download/1.0.16/libsodium-1.0.16.tar.gz
    - tar xvfz libsodium-1.0.16.tar.gz
    - cd libsodium-1.0.16 && ./configure --prefix=$HOME && make && make install && cd ..
    - wget https://github.com/zeromq/libzmq/releases/download/v4.2.5/zeromq-4.2.5.tar.gz
    - tar xvfz zeromq-4.2.5.tar.gz
    - cd zeromq-4.2.5 && ./configure --prefix=$HOME --with-libsodium && make && make install && cd ..

  script:
  - cargo clean
  - cargo build
  - cargo test
  - |
    if [[ "$TRAVIS_RUST_VERSION" == stable ]]; then
      (rustfmt --version || rustup component add rustfmt) &&
      cargo fmt -- --check --color=auto &&
      (cargo-clippy --version || rustup component add clippy) &&
      cargo clippy -- -D warnings &&
      (cargo-audit -h || cargo install cargo-audit) &&
      cargo audit       
    fi

  after_success: |
    if [[ "$TRAVIS_RUST_VERSION" == nightly ]]; then
      wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
      tar xzf master.tar.gz &&
      cd kcov-master &&
      mkdir build &&
      cd build &&
      cmake .. &&
      make &&
      sudo make install &&
      cd ../.. &&
      rm -rf kcov-master &&  
      cargo-kcov --version || cargo install cargo-kcov;
      travis_wait 30 cargo kcov --all;
      bash <(curl -s https://codecov.io/bash);
    fi

jobs:
  allow_failures:
    - rust: nightly
  include:
    - <<: *rust
      rust: stable
    - <<: *rust
      rust: beta
    - <<: *rust
      rust: nightly
    - name: Integration Test
      language: rust
      sudo: required
      dist: trusty
      addons:
          apt:
              packages:
                  - libssl-dev
                  - libcurl4-openssl-dev
                  - libelf-dev
                  - libdw-dev
                  - cmake
                  - gcc
                  - binutils-dev
                  - libc6-dev
      cache: cargo
      env:
        - RUSTFLAGS=-Ctarget-feature=+aes,+ssse3
        - PATH=$HOME/.local/bin:$PATH
        - LD_LIBRARY_PATH=$HOME/lib
        - PKG_CONFIG_PATH=$HOME/lib/pkgconfig
      before_install: # versions from https://github.com/erickt/rust-zmq/blob/master/.travis.yml
        - |
          wget https://github.com/jedisct1/libsodium/releases/download/1.0.16/libsodium-1.0.16.tar.gz
          tar xvfz libsodium-1.0.16.tar.gz
          cd libsodium-1.0.16 && ./configure --prefix=$HOME && make && make install && cd ..
          wget https://github.com/zeromq/libzmq/releases/download/v4.2.5/zeromq-4.2.5.tar.gz
          tar xvfz zeromq-4.2.5.tar.gz
          cd zeromq-4.2.5 && ./configure --prefix=$HOME --with-libsodium && make && make install && cd ..
          cargo clean
        - nvm install 10
        - |
          sudo cp integration-tests/docker/wait-for-it.sh /usr/local/bin
          sudo chmod +x /usr/local/bin/wait-for-it.sh
      script:
        - cd integration-tests
        - ./prepare.sh || travis_terminate 1;
        - . ./env.sh
        - docker-compose up -d || travis_terminate 1;
        - |
          sleep 10
          docker-compose ps
          docker-compose logs -t --tail="all"
        - ./run-test.sh || travis_terminate 1;
        - |
          cd client-rpc
          yarn
          yarn test

    # - name: Integration Tests
    #   language: node_js
    #   node_js:
    #     - "10"
    #   services:
    #     - docker
    #   before_script:
    #     - |
    #       sudo cp integration-tests/docker/wait-for-it.sh /usr/local/bin
    #       sudo chmod +x /usr/local/bin/wait-for-it.sh
    #     - git clone https://github.com/crypto-com/chain-tx-enclave ./integration-tests/docker/chain-tx-enclave
    #   script:
    #     # - |
    #     #   cd client-rpc
    #     #   yarn
    #     #   /usr/local/bin/wait-for-it.sh 127.0.0.1:16659 --strict -- yarn test
    #     - cd integration-tests
    #     - ./prepare.sh
    #     - . ./env.sh
    #     - docker-compose up -d
    #     - |
    #       sleep 5
    #       docker-compose ps
    #       docker-compose logs -t --tail="all"
    #     - ./run-test.sh
